
% created by Dean Freestone 27/07/2010
% create a GUI for epoching data from the exported compumedics files


% to do list
% ~~~~~
% adjust tick box and position for different channel numbers
% create a vector indicating good or bad epochs

function EpochProbeDataGUI(varargin)

clc
clear
close all

RawData = [];           % this is the data that will be loaded from the data file
NChannels = 32;
NSamples = [];
t = [];
RelativeStimTimes = [];
StimNumber = 1;

Fs = 5e3;       % sampling rate in Hz
FS = 8;
ControlColor = 'white';

% this is the full GUI figure
DataEpocher_fig = figure('Name','Probe Epoch',...
    'NumberTitle','off',...
    'units','normalized',...
    'Position',[0 .035 1 .9],...
    'toolbar','figure',...
    'menubar','none',...
    'color',ControlColor);

Top = 0.9;
LeftControls = 0.8;
RightControls = 0.001;
WidthControl = 0.17;
HeightControl = 0.025;      % starting top

% this is the plot area
Bottom = 0.02;
Height = 1-Bottom;
Left = 0.081;
Width = 0.7;
Ax = axes('parent',DataEpocher_fig,...
        'units', 'normalized',...
        'position', [Left Bottom Width Height]);
axis off
Top = Top-HeightControl;
uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'find *.dat file',...
    'callback',@GetDataFile);    
    
% set/get the file where the *.dat file is
Top = Top-HeightControl;
dat_pathname = '/Users/dean/Documents/PhD/Probe Analysis/Compumedics Data/UBET_Probe_DAT';
dat_filename = '*.dat filename';        % declare this here to make it a global
dat_FileAndPath = [dat_pathname '/' dat_filename];
TextBox_dat_filename = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', dat_filename,...
    'backgroundcolor',ControlColor);

Top = Top-HeightControl;
FileNumber = num2str(0);
TextBox_dat_FileNumber = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', ['file number: ' FileNumber],...
    'backgroundcolor',ControlColor);

% this should be a mat file in the same folder
Top = Top-2*HeightControl;
uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'find *.mat file',...
    'callback',@GetMatFile);    
    
% set/get the file where the *.dat file is
Top = Top-2*HeightControl;
mat_pathname = '/Users/dean/Documents/PhD/Probe Analysis/Compumedics Data/UBET_Probe_DAT';
mat_filename = '*.mat filename';        % declare this here to make it a global
mat_DataFileAndPath = [mat_pathname '/' mat_filename];
TextBox_mat_filename = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl 2*HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', mat_filename,...
    'backgroundcolor',ControlColor);

Top = Top-2*HeightControl;
uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'load data',...
    'callback',@LoadData); 

Top = Top-1*HeightControl;
DataStatusMessage = 'data not loaded';
DataStatusText = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', DataStatusMessage,...
    'backgroundcolor',ControlColor);

Top = Top-1*HeightControl;
NSamplesText = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', '',...
    'backgroundcolor',ControlColor);

Top = Top-1*HeightControl;
NChannelsText = uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', '',...
    'backgroundcolor',ControlColor);

Top = Top-2*HeightControl;
uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'offset for plot (y axis)',...
    'backgroundcolor',ControlColor);

Top = Top-1*HeightControl;
Offset = 1;
OffsetEntry = uicontrol('style','edit', ...
    'BackgroundColor', 'white', ...
    'units', 'normalized',...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string',num2str(Offset),...
    'callback',@SetOffset);

Top = Top-2*HeightControl;
uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'maximum channel for plot',...
    'backgroundcolor',ControlColor);

Top = Top-1*HeightControl;
MaxPlotChannel = 32;
MaxPlotChEdit = uicontrol('style','edit', ...
    'BackgroundColor', 'white', ...
    'units', 'normalized',...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string',num2str(MaxPlotChannel),...
    'callback',@SetMaxPlotCh);

Top = Top-2*HeightControl;
uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl/2 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'pre-stim time',...
    'backgroundcolor',ControlColor);

uicontrol('style','text', ...
    'units', 'normalized', ...
    'position', [LeftControls+WidthControl/2 Top WidthControl/2 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'post-stim time',...
    'backgroundcolor',ControlColor);

Top = Top-1*HeightControl;
StartTime = 1;
TimeStartEntry = uicontrol('style','edit', ...
    'BackgroundColor', 'white', ...
    'units', 'normalized',...
    'position', [LeftControls Top WidthControl/2 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string',num2str(StartTime),...
    'callback',@SetStartTime);

EndTime = 2;
TimeEndEntry = uicontrol('style','edit', ...
    'BackgroundColor', 'white', ...
    'units', 'normalized',...
    'position', [LeftControls+WidthControl/2 Top WidthControl/2 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string',num2str(EndTime),...
    'callback',@SetEndTime);

% view data to identify bad channels, need to be able to scroll through it
% this will be a file that is about 1GB in size
% view it in 10 second blocks
Top = Top-2*HeightControl;
uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'plot data',...
    'callback',@PlotData);   

Top = Top-2*HeightControl;
uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls Top WidthControl/3 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'backward',...
    'callback',@StimBackward);   

uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls+WidthControl/3 Top WidthControl/3 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'REJECT',...
    'callback',@StimReject);  

uicontrol('style','pushbutton', ...
    'units', 'normalized', ...
    'position', [LeftControls+2*WidthControl/3 Top WidthControl/3 HeightControl], ...
    'HorizontalAlignment','center', ...
    'parent', DataEpocher_fig, ...
    'string', 'forward',...
    'callback',@StimForward);

% use a background high-lighter to show where stims occur

% use a tick box to identify bad channels
MaximumPossibleNChannels = 128;
TickOffset = 2*Height/(4+MaxPlotChannel-1);
TickBoxesLeft = Left - 0.05;
TickBoxWidth = 0.1;
TickBoxHeight = HeightControl;
HeightOfTickBoxes = [linspace(Bottom+TickOffset,Bottom+Height-TickOffset,NChannels)-TickBoxHeight/2 -1*ones(1,MaximumPossibleNChannels-MaxPlotChannel)];

for nn=1:MaximumPossibleNChannels
    if nn <= MaxPlotChannel
        NoiseyChTickBox(nn) = uicontrol('style','checkbox',...
            'units', 'normalized', ...
            'position', [TickBoxesLeft HeightOfTickBoxes(nn) TickBoxWidth TickBoxHeight], ...
            'HorizontalAlignment','center', ...
            'parent', DataEpocher_fig, ...
            'string', ['Ch' num2str(MaxPlotChannel-nn+1)],...
            'callback',@TickBoxFunction);
    else
        NoiseyChTickBox(nn) = uicontrol('style','checkbox',...
            'units', 'normalized', ...
            'position', [TickBoxesLeft HeightOfTickBoxes(nn) TickBoxWidth TickBoxHeight], ...
            'HorizontalAlignment','center', ...
            'parent', DataEpocher_fig, ...
            'string', ['Ch' num2str(NChannels-nn+1)],...
            'visible','off',...
            'callback',@TickBoxFunction);
    end
end
    


    function GetDataFile(varargin)
        [dat_filename dat_pathname] = uigetfile(dat_pathname,'*.dat');
        dat_FileAndPath = [dat_pathname '/' dat_filename];
        set(TextBox_dat_filename,'string',dat_filename)
        files = dir(dat_pathname);
        files = files(3:end-1);
        length(files)
        for n=1:length(files)
            if strcmp(dat_filename,files(n).name)
                FileNumber = n;
            end
        end
        set(TextBox_dat_FileNumber,'string',['file number: ' num2str(FileNumber)])
    end

    function GetMatFile(varargin)
        [mat_filename mat_pathname] = uigetfile(dat_pathname,'*.mat');
        mat_FileAndPath = [mat_pathname '/' mat_filename];
        set(TextBox_mat_filename,'string',mat_filename)
        ProbeInfo = load(mat_FileAndPath);
        StartTimeOfDatFile = ProbeInfo.DataExportTimes(FileNumber,1);
        RelativeStimTimes = ProbeInfo.StimTime(FileNumber,:)-StartTimeOfDatFile;
    end

    function LoadData(varargin)
        DataStatusMessage = 'loading data';
        set(DataStatusText,'string',DataStatusMessage)
        RawData = load(dat_FileAndPath);
        t = RawData(:,1);
        RawData = RawData(:,2:end);          % need to change this to be specified
        NSamples = size(RawData,1);
        NChannels = size(RawData,2);
        set(NChannelsText,'string',['NChannels = ' num2str(NChannels)])
        set(NSamplesText,'string',['NSamples = ' num2str(NSamples)])
        DataStatusMessage = 'data loaded';
        set(DataStatusText,'string',DataStatusMessage)
        disp('writing data')
        assignin('base','RawData',RawData)
    end

    function SetEndTime(varargin)
        EndTime = str2double(get(TimeEndEntry,'string'));
    end
    
    function SetStartTime(varargin)
        StartTime = str2double(get(TimeStartEntry,'string'));
    end

    function SetOffset(varargin)
        Offset = str2double(get(OffsetEntry,'string'));
    end

    function PlotData(varargin)
        
        MaxPlotChannel = str2double(get(MaxPlotChEdit,'string'));
        PlotChannels = 1:MaxPlotChannel;
        NPlotChannels = length(PlotChannels);
        
        NSamples4Plot = (EndTime+StartTime)*Fs;
        OffsetVector = 0:Offset:Offset*(NPlotChannels-1);
        OffsetMatrix = repmat(OffsetVector,NSamples4Plot,1);
        temp = RawData(floor(RelativeStimTimes(StimNumber)*Fs-(StartTime*Fs-1):(RelativeStimTimes(StimNumber)+EndTime)*Fs),PlotChannels);
        ZeroMeanRawData = temp-repmat(mean(temp,1),NSamples4Plot,1);       % make data zero mean
        
        plot(ZeroMeanRawData+OffsetMatrix,'parent',Ax)
        axis off
        ylim([-2*Offset Offset*(NPlotChannels+1)])
    end

    function TickBoxFunction(varargin)
        for n=1:NChannels
            % find out if channels is noisey
            % get the value of all the tick boxes
        end
    end

    function StimBackward(varargin)
        if StimNumber > 1
            StimNumber = StimNumber-1;
        end
        PlotData()
    end

    function StimForward(varargin)
        if StimNumber < 100
            StimNumber = StimNumber+1;
        end
        PlotData()
    end

    function SetMaxPlotCh(varargin)
        PlotData()
    end
end